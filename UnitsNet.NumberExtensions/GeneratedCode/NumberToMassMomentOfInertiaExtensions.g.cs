//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#if NET7_0_OR_GREATER
using System.Numerics;
#endif

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToMassMomentOfInertia
{
    /// <summary>
    /// A number to MassMomentOfInertia Extensions
    /// </summary>
    public static class NumberToMassMomentOfInertiaExtensions
    {
        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia GramSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromGramSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia GramSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromGramSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia GramSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromGramSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(QuantityValue)" />
        public static MassMomentOfInertia GramSquareMillimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromGramSquareMillimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia KilogramSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilogramSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia KilogramSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilogramSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia KilogramSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilogramSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(QuantityValue)" />
        public static MassMomentOfInertia KilogramSquareMillimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilogramSquareMillimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia KilotonneSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilotonneSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia KilotonneSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilotonneSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia KilotonneSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilotonneSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(QuantityValue)" />
        public static MassMomentOfInertia KilotonneSquareMilimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromKilotonneSquareMilimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia MegatonneSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMegatonneSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia MegatonneSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMegatonneSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia MegatonneSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMegatonneSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(QuantityValue)" />
        public static MassMomentOfInertia MegatonneSquareMilimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMegatonneSquareMilimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia MilligramSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMilligramSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia MilligramSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMilligramSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia MilligramSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMilligramSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(QuantityValue)" />
        public static MassMomentOfInertia MilligramSquareMillimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromMilligramSquareMillimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(QuantityValue)" />
        public static MassMomentOfInertia PoundSquareFeet<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromPoundSquareFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(QuantityValue)" />
        public static MassMomentOfInertia PoundSquareInches<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromPoundSquareInches(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromSlugSquareFeet(QuantityValue)" />
        public static MassMomentOfInertia SlugSquareFeet<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromSlugSquareFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromSlugSquareInches(QuantityValue)" />
        public static MassMomentOfInertia SlugSquareInches<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromSlugSquareInches(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(QuantityValue)" />
        public static MassMomentOfInertia TonneSquareCentimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromTonneSquareCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(QuantityValue)" />
        public static MassMomentOfInertia TonneSquareDecimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromTonneSquareDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(QuantityValue)" />
        public static MassMomentOfInertia TonneSquareMeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromTonneSquareMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(QuantityValue)" />
        public static MassMomentOfInertia TonneSquareMilimeters<T>(this T value)
            where T : notnull
#if NET7_0_OR_GREATER
            , INumber<T>
#endif
            => MassMomentOfInertia.FromTonneSquareMilimeters(Convert.ToDouble(value));

    }
}
